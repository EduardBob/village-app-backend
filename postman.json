{
	"version": 1,
	"collections": [
		{
			"id": "857168e4-8eae-ff9f-7792-930f6b5711d7",
			"name": "Village",
			"description": "REST API in Postman",
			"order": [],
			"folders": [
				{
					"id": "bbd1e54e-0f2f-9f48-251d-0c480126e5b5",
					"name": "articles",
					"description": "",
					"write": true,
					"order": [
						"91eab374-fbfc-5fa6-c2a7-6812d9496fff",
						"a8df97a9-8f13-d5e3-20e6-41ac48f56957"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"collectionId": "5997e15b-cfbf-bc11-ae75-280333490a60"
				},
				{
					"id": "3216c8a6-a91b-42cd-f09c-1d6854e24d33",
					"name": "auth",
					"description": "",
					"write": true,
					"order": [
						"02e1f8e0-310a-12c4-b5b6-dd5dbdf34d50",
						"74c9352b-ba9b-9f3a-7a42-c02a2fae45a2"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "35449075-1eed-3f94-d21a-74a9906b7012",
					"name": "buildings",
					"description": "",
					"write": true,
					"order": [
						"647bff1f-34f6-4be4-028a-e82d12082f50"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "3b7735f7-ca7e-84fc-43fd-894cd95cb34d",
					"name": "me",
					"description": "",
					"write": true,
					"order": [
						"b467e61d-0017-9331-a514-8f16acde22c1",
						"395633f8-3456-0f40-1be6-e50614407282",
						"3d8644be-8e91-fb37-22da-dac901f4cb09",
						"4fd746df-83c9-a9dd-8f37-c25d195c4301"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "54e27670-9b7a-4b01-ab34-dcfa7e85f7f1",
					"name": "products",
					"description": "",
					"order": [
						"79e23a71-2416-9588-7a5d-2b197c68f08b",
						"c56e08c4-9289-6f47-62d2-00d9ce6ec77f",
						"126e3aaf-1644-395d-1a16-493ce6f54f6b",
						"4ca24ee1-7fc3-4d7d-9cdc-a3d9e865a679"
					],
					"createdAt": "2015-09-23T16:02:32.000Z",
					"updatedAt": "2015-09-23T19:34:03.000Z",
					"owner": "161799",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60007281,
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "925c4fbe-5fe8-bba0-7922-8c3a3e3f1fa6",
					"name": "services",
					"description": "",
					"write": true,
					"order": [
						"8d7481ff-bc7c-090b-1895-5083710d37bc",
						"1e490662-9271-d44f-fc3b-bdc2dac0b2b4",
						"a1849491-a8bd-5815-c572-1b37f1f4b654",
						"e47d6545-a082-9fb8-1d38-0a019a783250"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"collectionId": "5997e15b-cfbf-bc11-ae75-280333490a60"
				},
				{
					"id": "0e74f68d-828f-7746-87ff-4a62e786340a",
					"name": "settings",
					"description": "",
					"write": true,
					"order": [
						"92a82659-f897-256e-6da8-187c8b736426"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "57fe5175-167b-6143-22f9-37c07e1fbaa8",
					"name": "surveys",
					"description": "",
					"write": true,
					"order": [
						"217434d3-6dde-f7ec-2da1-e563af17c4fd",
						"ab5c006a-58b1-822b-c8e0-b40fafb52f4f"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "46e27476-6234-8a62-5d20-e9d2fddaefff",
					"name": "tokens",
					"description": "",
					"write": true,
					"order": [
						"1768911f-dbc2-a148-3965-73c5ac70d7f9",
						"92b1899b-aaf5-9921-0136-7355ccdb07d4"
					],
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7"
				},
				{
					"id": "1f6830b7-0146-bd7b-0d33-d20b465b56e3",
					"name": "users",
					"description": "",
					"order": [
						"1559a10e-0de3-35d9-7d10-2bb00808af75",
						"7ff3ae97-7215-f30e-6366-dcb29bd429cf",
						"dded57a2-30aa-7d28-c493-cb984164a8fb"
					],
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T10:58:16.000Z",
					"owner": "161799",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60007317,
					"collection": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"collectionId": "5997e15b-cfbf-bc11-ae75-280333490a60",
					"write": true
				}
			],
			"timestamp": 1442849025764,
			"synced": true,
			"remote_id": 0,
			"owner": "161799",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"public": false,
			"createdAt": null,
			"updatedAt": 1444766235572,
			"write": true,
			"requests": [
				{
					"id": "02e1f8e0-310a-12c4-b5b6-dd5dbdf34d50",
					"headers": "",
					"url": "{{domain}}/api/v1/auth/token",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"token\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", data.data.token);",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1444767241243,
					"name": "/api/v1/auth/token",
					"description": "Get token by user credentials (phone and password)",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": []
				},
				{
					"id": "126e3aaf-1644-395d-1a16-493ce6f54f6b",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/orders?page={{page}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Count == 15 \"] = data.data.length;\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains quantity\"] = responseBody.has(\"quantity\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");    \n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    $.each(data.data, function(index, item) {\n        if (item.status === 'rejected') {\n            tests[\"decline_reason not null, index = \" + index] = item.decline_reason !== null;\n        }\n        else {\n            tests[\"decline_reason is null, index = \" + index] = item.decline_reason === null;\n        }\n        tests[\"Body contains product, index = \" + index] = item.product && item.product.data;        \n    });\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129001067,
					"name": "/api/v1/products/orders",
					"description": "Get all my product's orders",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:33.000Z",
					"updatedAt": "2015-09-24T21:10:01.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60495757,
					"history": null,
					"folder": "54e27670-9b7a-4b01-ab34-dcfa7e85f7f1"
				},
				{
					"id": "1559a10e-0de3-35d9-7d10-2bb00808af75",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/users",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": "+7(111)1111118",
							"type": "text",
							"enabled": true
						},
						{
							"key": "building_id",
							"value": "1",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443093506763,
					"name": "/api/v1/users",
					"description": "New user regisration",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T11:18:26.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60287206,
					"history": null,
					"folder": "1f6830b7-0146-bd7b-0d33-d20b465b56e3",
					"isFromCollection": true
				},
				{
					"id": "1768911f-dbc2-a148-3965-73c5ac70d7f9",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/tokens",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "type",
							"value": "change_phone",
							"type": "text",
							"enabled": true
						},
						{
							"key": "phone",
							"value": "+7(111)1111111",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_phone",
							"value": "+7(111)1111119",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains session\"] = responseBody.has(\"session\");\npostman.setEnvironmentVariable(\"token.session\", data.data.session);\n\nif ('true' === postman.getEnvironmentVariable('debug')) {\n    tests[\"Body contains code\"] = responseBody.has(\"code\");\n    postman.setEnvironmentVariable(\"token.code\", data.data.code);\n}\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443121909399,
					"name": "/api/v1/tokens",
					"description": "Add new token",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T19:11:49.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60464057,
					"history": null,
					"folder": "46e27476-6234-8a62-5d20-e9d2fddaefff"
				},
				{
					"id": "1e490662-9271-d44f-fc3b-bdc2dac0b2b4",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services??category_id={{service.category.id}}",
					"preRequestScript": "// category_id: {{service.category.id}}\npostman.setEnvironmentVariable(\"service.category.id\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "product_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"service.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129154631,
					"name": "/api/v1/services",
					"description": "Get all services",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:34.000Z",
					"updatedAt": "2015-09-24T21:12:34.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60496272,
					"history": null,
					"folder": "925c4fbe-5fe8-bba0-7922-8c3a3e3f1fa6"
				},
				{
					"id": "217434d3-6dde-f7ec-2da1-e563af17c4fd",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/surveys/current",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "session",
							"value": "{{tokens,session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{tokens,code}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains title\"] = responseBody.has(\"title\");\ntests[\"Body contains options\"] = responseBody.has(\"options\");\ntests[\"Body contains options count > 0\"] = data.data.options.length > 0;\n\nif (data.data.my_vote) {\n    postman.setEnvironmentVariable(\"survey.id\", data.data.id);\n    postman.setEnvironmentVariable(\"survey.my_vote.choice\", data.data.my_vote.data.choice);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443133743967,
					"name": "/api/v1/surveys/current",
					"description": "Get current survey",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"owner": "161799",
					"folder": "57fe5175-167b-6143-22f9-37c07e1fbaa8"
				},
				{
					"id": "395633f8-3456-0f40-1be6-e50614407282",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/name",
					"preRequestScript": "first_name = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\nlast_name = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\npostman.setEnvironmentVariable(\"me.first_name\", first_name);\npostman.setEnvironmentVariable(\"me.last_name\", last_name);",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\n    tests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\n    tests[\"Body contains phone\"] = responseBody.has(\"phone\");\n    tests[\"Body contains activated\"] = responseBody.has(\"activated\");    \n    tests[\"first_name changed\"] = first_name === data.data.first_name;\n    tests[\"last_name changed\"] = last_name === data.data.last_name;\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443121185761,
					"name": "/api/v1/me/name",
					"description": "Change first name and last name",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": "html",
					"createdAt": "2015-09-23T21:58:49.000Z",
					"updatedAt": "2015-09-24T18:59:45.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60460896,
					"history": null,
					"folder": "3b7735f7-ca7e-84fc-43fd-894cd95cb34d"
				},
				{
					"id": "3d8644be-8e91-fb37-22da-dac901f4cb09",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/password",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password_confirmation",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\ntests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\ntests[\"Body contains phone\"] = responseBody.has(\"phone\");\ntests[\"Body contains activated\"] = responseBody.has(\"activated\");\ntests[\"Body contains building\"] = responseBody.has(\"building\");\n\npostman.setEnvironmentVariable(\"me.password\", data.data.id);\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129800410,
					"name": "/api/v1/me/password",
					"description": "Change password",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": "html",
					"createdAt": "2015-09-23T22:01:05.000Z",
					"updatedAt": "2015-09-24T21:23:20.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60499054,
					"history": null,
					"folder": "3b7735f7-ca7e-84fc-43fd-894cd95cb34d"
				},
				{
					"id": "4ca24ee1-7fc3-4d7d-9cdc-a3d9e865a679",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/orders",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "product_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains quantity\"] = responseBody.has(\"quantity\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains product\"] = responseBody.has(\"product\") && data.data.product && data.data.product.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128426325,
					"name": "/api/v1/products/orders",
					"description": "Add product order",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:33.000Z",
					"updatedAt": "2015-09-24T21:00:26.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60493587,
					"history": null,
					"folder": "54e27670-9b7a-4b01-ab34-dcfa7e85f7f1"
				},
				{
					"id": "4fd746df-83c9-a9dd-8f37-c25d195c4301",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/phone",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "{{tokens,session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{tokens,code}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "// tests[\"Body matches string\"] = responseBody.has(\"data\");\n// tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\n// tests[\"Body contains id\"] = responseBody.has(\"id\");\n// tests[\"Body contains session\"] = responseBody.has(\"session\");\n\n// var data = JSON.parse(responseBody);\n// if (data.data) {\n//     if ('true' === postman.getEnvironmentVariable('debug')) {\n//         var hasCode = data.code !== 'undefined';\n//         tests[\"Body contains code\"] = hasCode;\n//         if (hasCode) {\n//             postman.setEnvironmentVariable(\"token.code\", data.data.code);\n//         }\n//     }\n\n//     if (data.data.session) {\n//         postman.setEnvironmentVariable(\"token.session\", data.data.session);    \n//     }    \n// }",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443134265474,
					"name": "/api/v1/me/phone",
					"description": "Change phone number",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"owner": "161799",
					"folder": "3b7735f7-ca7e-84fc-43fd-894cd95cb34d"
				},
				{
					"id": "647bff1f-34f6-4be4-028a-e82d12082f50",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/buildings/{{building.code}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"building.code\", 'test');",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains address\"] = responseBody.has(\"address\");\n\npostman.setEnvironmentVariable(\"building.id\", data.data.id);",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443133305440,
					"name": "/api/v1/buildings/{code}",
					"description": "Get a building by code",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"owner": "161799",
					"folder": "35449075-1eed-3f94-d21a-74a9906b7012"
				},
				{
					"id": "74c9352b-ba9b-9f3a-7a42-c02a2fae45a2",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/auth/refresh",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"token\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", data.data.token);",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1444767225308,
					"name": "/api/v1/auth/refresh",
					"description": "Refresh token by old token",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": []
				},
				{
					"id": "79e23a71-2416-9588-7a5d-2b197c68f08b",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/categories",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "session",
							"value": "2DX63DDKxu",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "2995870",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    \n    postman.setEnvironmentVariable(\"product.category.id\", data.data[0].id);\n}\nelse {\n    postman.setEnvironmentVariable(\"product.category.id\", 1);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128820612,
					"name": "/api/v1/products/categories",
					"description": "Get all my product's orders",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:32.000Z",
					"updatedAt": "2015-09-24T21:07:00.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60494943,
					"history": null,
					"folder": "54e27670-9b7a-4b01-ab34-dcfa7e85f7f1"
				},
				{
					"id": "7ff3ae97-7215-f30e-6366-dcb29bd429cf",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/users/confirm",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "EWYclfeSHS",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "6443943",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "first_name",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443102249514,
					"name": "/api/v1/users/confirm",
					"description": "User regisration confirm",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T13:44:09.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60348621,
					"history": null,
					"folder": "1f6830b7-0146-bd7b-0d33-d20b465b56e3",
					"isFromCollection": true
				},
				{
					"id": "8d7481ff-bc7c-090b-1895-5083710d37bc",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/categories",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "session",
							"value": "2DX63DDKxu",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "2995870",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    \n    postman.setEnvironmentVariable(\"service.category.id\", data.data[0].id);\n}\nelse {\n    postman.setEnvironmentVariable(\"service.category.id\", 1);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128839836,
					"name": "/api/v1/services/categories",
					"description": "Get all categories of services",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:33.000Z",
					"updatedAt": "2015-09-24T21:07:19.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60493307,
					"history": null,
					"folder": "925c4fbe-5fe8-bba0-7922-8c3a3e3f1fa6"
				},
				{
					"id": "91eab374-fbfc-5fa6-c2a7-6812d9496fff",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/articles?page={{page}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains short\"] = responseBody.has(\"short\");\n    tests[\"Body contains text\"] = responseBody.has(\"text\");    \n    postman.setEnvironmentVariable(\"article.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443133264484,
					"name": "/api/v1/articles",
					"description": "<p>Get articles list</p>",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"owner": "161799",
					"folder": "bbd1e54e-0f2f-9f48-251d-0c480126e5b5"
				},
				{
					"id": "92a82659-f897-256e-6da8-187c8b736426",
					"headers": "",
					"url": "{{domain}}/api/v1/settings",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains name\"] = responseBody.has(\"name\");\ntests[\"Body contains value\"] = responseBody.has(\"value\");",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443111791009,
					"name": "/api/v1/settings",
					"description": "Get all settings",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"owner": "161799",
					"folder": "0e74f68d-828f-7746-87ff-4a62e786340a"
				},
				{
					"id": "92b1899b-aaf5-9921-0136-7355ccdb07d4",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/tokens/check",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "type",
							"value": "change_phone",
							"type": "text",
							"enabled": true
						},
						{
							"key": "session",
							"value": "TbDB6TwJmf",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "9002075",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443095951775,
					"name": "/api/v1/tokens/check",
					"description": "Check token code",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T11:59:11.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60311805,
					"history": null,
					"folder": "46e27476-6234-8a62-5d20-e9d2fddaefff",
					"isFromCollection": true
				},
				{
					"id": "a1849491-a8bd-5815-c572-1b37f1f4b654",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/orders?page={{page}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Count == 15 \"] = data.data.length;\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    $.each(data.data, function(index, order) {\n        if (order.status === 'rejected') {\n            tests[\"decline_reason not null, index = \" + index] = order.decline_reason !== null;\n        }\n        else {\n            tests[\"decline_reason is null, index = \" + index] = order.decline_reason === null;\n        }\n        tests[\"Body contains service, index = \" + index] = order.service && order.service.data;        \n    });\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129029390,
					"name": "/api/v1/services/orders",
					"description": "Get all my service orders",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:34.000Z",
					"updatedAt": "2015-09-24T21:10:29.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60495830,
					"history": null,
					"folder": "925c4fbe-5fe8-bba0-7922-8c3a3e3f1fa6"
				},
				{
					"id": "a8df97a9-8f13-d5e3-20e6-41ac48f56957",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/articles/{{article.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "product_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains short\"] = responseBody.has(\"short\");\n    tests[\"Body contains text\"] = responseBody.has(\"text\");    \n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443121107594,
					"name": "/api/v1/articles/{id}",
					"description": "<p>Get article by id</p>",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:31.000Z",
					"updatedAt": "2015-09-24T18:58:27.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60460532,
					"history": null,
					"folder": "bbd1e54e-0f2f-9f48-251d-0c480126e5b5"
				},
				{
					"id": "ab5c006a-58b1-822b-c8e0-b40fafb52f4f",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/surveys/{{survey.id}}",
					"preRequestScript": "randomSurveyChoice = Math.floor(Math.random() * 3);\npostman.setEnvironmentVariable(\"survey.choice\", randomSurveyChoice);",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "choice",
							"value": "{{survey.choice}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains choice\"] = responseBody.has(\"choice\");\ntests[\"Returned choice is right\"] = randomSurveyChoice * 1 === data.data.choice * 1;\n\nif (data.data.choice) {\n    postman.setEnvironmentVariable(\"survey.my_vote.choice\", data.data.choice);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443134184177,
					"name": "/api/v1/surveys/{id}",
					"description": "Survey vote",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"owner": "161799",
					"folder": "57fe5175-167b-6143-22f9-37c07e1fbaa8"
				},
				{
					"id": "b467e61d-0017-9331-a514-8f16acde22c1",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password_confirmation",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\n    tests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\n    tests[\"Body contains phone\"] = responseBody.has(\"phone\");\n    tests[\"Body contains activated\"] = responseBody.has(\"activated\");\n    tests[\"Body contains building\"] = responseBody.has(\"building\");\n\n    postman.setEnvironmentVariable(\"me.id\", data.data.id);\n    postman.setEnvironmentVariable(\"me.phone\", data.data.id);\n}\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129770693,
					"name": "/api/v1/me",
					"description": "Get me info",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:32.000Z",
					"updatedAt": "2015-09-24T21:22:50.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60460678,
					"history": null,
					"folder": "3b7735f7-ca7e-84fc-43fd-894cd95cb34d"
				},
				{
					"id": "c56e08c4-9289-6f47-62d2-00d9ce6ec77f",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products?category_id={{product.category.id}}",
					"preRequestScript": "// category_id: {{product.category.id}}\npostman.setEnvironmentVariable(\"product.category.id\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "product_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");\n    tests[\"Body contains image\"] = responseBody.has(\"image\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"product.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129134101,
					"name": "/api/v1/products",
					"description": "Get all my product's orders",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:33.000Z",
					"updatedAt": "2015-09-24T21:12:14.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60496200,
					"history": null,
					"folder": "54e27670-9b7a-4b01-ab34-dcfa7e85f7f1"
				},
				{
					"id": "dded57a2-30aa-7d28-c493-cb984164a8fb",
					"owner": "161799",
					"headers": "",
					"url": "{{domain}}/api/v1/users/reset",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "2DX63DDKxu",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "2995870",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443095243022,
					"name": "/api/v1/users/reset",
					"description": "Reset user password",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-09-24T12:15:00.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60286786,
					"history": null,
					"folder": "1f6830b7-0146-bd7b-0d33-d20b465b56e3"
				},
				{
					"id": "e47d6545-a082-9fb8-1d38-0a019a783250",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/orders",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "service_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains service\"] = responseBody.has(\"service\") && data.data.service && data.data.service.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128430195,
					"name": "/api/v1/services/orders",
					"description": "Add service order",
					"collectionId": "857168e4-8eae-ff9f-7792-930f6b5711d7",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:34.000Z",
					"updatedAt": "2015-09-24T21:00:30.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60493108,
					"history": null,
					"folder": "925c4fbe-5fe8-bba0-7922-8c3a3e3f1fa6"
				}
			]
		}
	],
	"environments": [
		{
			"id": "737b4868-ac75-2c31-9280-ff28bb7d03e8",
			"name": "dev",
			"values": [
				{
					"key": "debug",
					"value": "true",
					"type": "text",
					"name": "debug",
					"enabled": true
				},
				{
					"key": "domain",
					"value": "http://village.dev",
					"type": "text",
					"name": "domain",
					"enabled": true
				},
				{
					"key": "token",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEsImlzcyI6Imh0dHA6XC9cL3ZpbGxhZ2UuZGV2XC9hcGlcL3YxXC9hdXRoXC90b2tlbiIsImlhdCI6IjE0NDQ3NjcyNjQiLCJleHAiOiIxNDQ0NzY3MzI0IiwibmJmIjoiMTQ0NDc2NzI2NCIsImp0aSI6ImI4YjcyNjBhMzA2NzIxYWY5ZGRmMzVjNDUxMDM5NGRjIn0.q4r-oi37Sq8ASGB5aqVTeb3SKtBYCn761TpUdPjjWYo",
					"type": "text",
					"name": "token",
					"enabled": true
				},
				{
					"key": "phone",
					"value": "+7(111)1111111",
					"type": "text",
					"name": "phone",
					"enabled": true
				},
				{
					"key": "password",
					"value": "yj3wev32R6eQJWV",
					"type": "text",
					"name": "password",
					"enabled": true
				},
				{
					"key": "token.code",
					"value": "7613083",
					"type": "text",
					"name": "token.code",
					"enabled": true
				},
				{
					"key": "token.session",
					"value": "VORsMyrPG1",
					"type": "text",
					"name": "token.session",
					"enabled": true
				},
				{
					"key": "article.id",
					"value": "300",
					"type": "text",
					"name": "article.id",
					"enabled": true
				},
				{
					"key": "me.first_name",
					"value": "ppqjtjyxvf",
					"type": "text",
					"name": "me.first_name",
					"enabled": true
				},
				{
					"key": "me.last_name",
					"value": "fofehpvi",
					"type": "text",
					"name": "me.last_name",
					"enabled": true
				},
				{
					"key": "product.id",
					"value": "3",
					"type": "text",
					"name": "product.id",
					"enabled": true
				},
				{
					"key": "service.id",
					"value": "86",
					"type": "text",
					"name": "service.id",
					"enabled": true
				},
				{
					"key": "page",
					"value": "1",
					"type": "text",
					"name": "page",
					"enabled": true
				},
				{
					"key": "product.category.id",
					"value": "1",
					"type": "text",
					"name": "product.category.id",
					"enabled": true
				},
				{
					"key": "service.category.id",
					"value": "1",
					"type": "text",
					"name": "service.category.id",
					"enabled": true
				},
				{
					"key": "building.code",
					"value": "test",
					"type": "text",
					"name": "building.code",
					"enabled": true
				},
				{
					"key": "building.id",
					"value": "1",
					"type": "text",
					"name": "building.id",
					"enabled": true
				},
				{
					"key": "me.password",
					"value": "2",
					"type": "text",
					"name": "me.password",
					"enabled": true
				},
				{
					"key": "survey.id",
					"value": "106",
					"type": "text",
					"name": "survey.id",
					"enabled": true
				},
				{
					"key": "survey.my_vote.choice",
					"value": "0",
					"type": "text",
					"name": "survey.my_vote.choice",
					"enabled": true
				},
				{
					"key": "survey.choice",
					"value": "0",
					"type": "text",
					"name": "survey.choice",
					"enabled": true
				}
			],
			"timestamp": 1444767867579
		},
		{
			"id": "fdfc1d48-8ad0-8d6e-ff74-a2c0b4c74448",
			"name": "staging",
			"values": [
				{
					"key": "debug",
					"value": "true",
					"type": "text",
					"name": "debug",
					"enabled": true
				},
				{
					"key": "domain",
					"value": "http://village.fruitware.ru",
					"type": "text",
					"name": "domain",
					"enabled": true
				},
				{
					"key": "token",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaXNzIjoiaHR0cDpcL1wvdmlsbGFnZS5mcnVpdHdhcmUucnVcL2FwaVwvdjFcL2F1dGgiLCJpYXQiOiIxNDQ0NzQ2MTM3IiwiZXhwIjoiMTQ3NjI4MjEzNyIsIm5iZiI6IjE0NDQ3NDYxMzciLCJqdGkiOiJiN2E0Mzk3ZGY5N2Q1YWRkYTdmZjMzYmM4NGQ5MjY1NyJ9.AC-XLZ7agmRsr2Lt_N7YvFI6-TcsQjc6zKiYN9n8NYs",
					"type": "text",
					"name": "token",
					"enabled": true
				},
				{
					"key": "phone",
					"value": "+7(111)1111111",
					"type": "text",
					"name": "phone",
					"enabled": true
				},
				{
					"key": "password",
					"value": "yj3wev32R6eQJWV",
					"type": "text",
					"name": "password",
					"enabled": true
				},
				{
					"key": "token.session",
					"type": "text",
					"value": "iLbYVPzJRP"
				},
				{
					"key": "token.code",
					"type": "text",
					"value": "3774267"
				},
				{
					"key": "service.category.id",
					"type": "text",
					"value": "8"
				},
				{
					"key": "building.code",
					"type": "text",
					"value": "test"
				},
				{
					"key": "building.id",
					"type": "text",
					"value": "1"
				},
				{
					"key": "article.id",
					"type": "text",
					"value": "99"
				}
			],
			"timestamp": 1444767867587
		}
	],
	"headerPresets": [
		{
			"id": "d2506735-10a2-8e01-4f01-5f7fd84e5fc9",
			"name": "Authorization",
			"headers": [
				{
					"key": "Authorization",
					"value": "Bearer  {{token}}",
					"type": "text",
					"name": "Authorization",
					"enabled": true
				}
			],
			"timestamp": 1443027474004
		}
	],
	"globals": [
		{
			"key": "{id}",
			"type": "text",
			"value": "1"
		},
		{
			"key": "{{id}}",
			"type": "text",
			"value": "1"
		},
		{
			"key": "id",
			"type": "text",
			"value": "1"
		}
	]
}
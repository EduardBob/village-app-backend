{
	"version": 1,
	"collections": [
		{
			"id": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
			"name": "Village-security-app",
			"description": "",
			"order": [],
			"folders": [
				{
					"id": "ad9ac35e-ccc9-e75b-4ea2-ad3a584cd82a",
					"name": "auth",
					"description": "",
					"write": true,
					"order": [
						"4ee2139b-4141-6b55-9964-52688e219de1"
					],
					"collection": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"owner": "161799",
					"collection_name": "Village-security-app",
					"collection_owner": "161799",
					"collection_id": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d"
				},
				{
					"id": "5cbb6dbc-a85e-bc83-2b75-1154df642f44",
					"name": "services",
					"description": "",
					"write": true,
					"order": [
						"3e5894e3-c55c-e6ed-da83-50ada9ce2920",
						"9be4af34-a127-c2f5-5aec-4478ade9b076",
						"6f460115-c5a6-f4a6-15f3-dcbccba0c759",
						"3622a47f-f833-4683-f7a5-1fdacc371b78",
						"62d98229-8f2d-e0cd-6586-e079737491b6"
					],
					"collection": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"owner": "161799",
					"collection_name": "Village-security-app",
					"collection_owner": "161799",
					"collection_id": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d"
				}
			],
			"timestamp": 1450876821163,
			"synced": true,
			"remote_id": 0,
			"owner": "161799",
			"sharedWithTeam": false,
			"subscribed": false,
			"public": false,
			"createdAt": 1471255836115,
			"updatedAt": 1471255836115,
			"write": true,
			"shared": false,
			"hasRequests": true,
			"requests": [
				{
					"id": "3622a47f-f833-4683-f7a5-1fdacc371b78",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/security/services/orders",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "text",
							"type": "text",
							"enabled": true
						},
						{
							"key": "added_from",
							"value": "text",
							"type": "text",
							"enabled": true
						},
						{
							"key": "phone",
							"value": "",
							"type": "text",
							"enabled": true
						},
						{
							"key": "admin_comment",
							"value": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains service\"] = responseBody.has(\"service\") && data.data.service && data.data.service.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1459420421477,
					"name": "/api/v1/security/services/orders",
					"description": "Add service order",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"responses": [],
					"owner": "161799",
					"folder": "5cbb6dbc-a85e-bc83-2b75-1154df642f44"
				},
				{
					"id": "3e5894e3-c55c-e6ed-da83-50ada9ce2920",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/security/services",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"service.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1450879847587,
					"name": "/api/v1/security/services ",
					"description": "Get all services where user assigned as executor",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"owner": "161799",
					"folder": "5cbb6dbc-a85e-bc83-2b75-1154df642f44"
				},
				{
					"id": "4ee2139b-4141-6b55-9964-52688e219de1",
					"headers": "",
					"url": "{{domain}}/api/v1/security/auth/token",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body contains data\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar response = JSON.parse(responseBody);\nif (response.data && response.data.token) {\n    postman.setEnvironmentVariable(\"token\", response.data.token);   \n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1451386978374,
					"name": "/api/v1/security/auth/token",
					"description": "Get token by user credentials (phone and password)",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"responses": [],
					"owner": "161799",
					"folder": "ad9ac35e-ccc9-e75b-4ea2-ad3a584cd82a"
				},
				{
					"id": "62d98229-8f2d-e0cd-6586-e079737491b6",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/security/services/orders/{{service.order.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "text",
							"type": "text",
							"enabled": true
						},
						{
							"key": "added_from",
							"value": "text",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1450971875192,
					"name": "/api/v1/security/services/orders/{id}",
					"description": "Get ine service orders by id",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"responses": [],
					"owner": "161799",
					"folder": "5cbb6dbc-a85e-bc83-2b75-1154df642f44"
				},
				{
					"id": "6f460115-c5a6-f4a6-15f3-dcbccba0c759",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/security/services/orders/{{service.order.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "PATCH",
					"data": [
						{
							"key": "status",
							"value": "running|done",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_status",
							"value": "not_paid|paid",
							"type": "text",
							"enabled": true
						},
						{
							"key": "phone",
							"value": "",
							"type": "text",
							"enabled": true
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "urlencoded",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains service\"] = responseBody.has(\"service\") && data.data.service && data.data.service.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1459420601815,
					"name": "/api/v1/security/services/orders",
					"description": "Update service order status and payment status",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"responses": [],
					"owner": "161799",
					"folder": "5cbb6dbc-a85e-bc83-2b75-1154df642f44"
				},
				{
					"id": "9be4af34-a127-c2f5-5aec-4478ade9b076",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/security/services/orders?only_opened=1&from_perform_date=2014-12-02&to_perform_date=2017-12-31&page={{page}}&search=&limit=10",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "text",
							"type": "text",
							"enabled": true
						},
						{
							"key": "added_from",
							"value": "text",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Count == 15 \"] = data.data.length;\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    $.each(data.data, function(index, order) {\n        if (order.status === 'rejected') {\n            tests[\"decline_reason not null, index = \" + index] = order.decline_reason !== null;\n        }\n        else {\n            tests[\"decline_reason is null, index = \" + index] = order.decline_reason === null;\n        }\n        tests[\"Body contains service, index = \" + index] = order.service && order.service.data;        \n    });\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1460028508032,
					"name": "/api/v1/security/services/orders",
					"description": "Get all service orders",
					"collectionId": "24955ef2-fcf5-c6a9-f578-cae0f6ffa83d",
					"responses": [],
					"owner": "161799",
					"folder": "5cbb6dbc-a85e-bc83-2b75-1154df642f44"
				}
			]
		},
		{
			"id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
			"name": "Village",
			"description": "REST API in Postman",
			"order": [],
			"folders": [
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685541,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "b9d65d56-38c6-46af-a8b2-74e1acb8a1d4",
					"name": "articles",
					"description": "",
					"order": [
						"945b236d-d59f-b8e0-468a-cdf3e51a7336",
						"a43256f0-0441-be2e-59dc-715ccfbf9452",
						"da0d471b-7793-1fd8-4cce-b709a907de91"
					],
					"createdAt": "2015-10-14T09:09:02.000Z",
					"updatedAt": "2015-10-14T09:09:05.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685544,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "9e196810-364d-6d78-af81-cb31ea2a333c",
					"name": "auth",
					"description": "",
					"order": [
						"dd8e64f3-7cb1-e930-9992-878b27914e6b",
						"2460d8af-d2a5-1917-e9fb-5bf3392ae4e9"
					],
					"createdAt": "2015-10-14T09:09:02.000Z",
					"updatedAt": "2015-10-14T09:09:04.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685546,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "5f7e66dd-4431-c43c-ec23-ca506bf474b3",
					"name": "buildings",
					"description": "",
					"order": [
						"25a5fcb4-ca5a-2dc0-5e3c-e31f1bc5eae6"
					],
					"createdAt": "2015-10-14T09:09:02.000Z",
					"updatedAt": "2015-10-14T09:09:04.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685547,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "0f31ed68-0b02-7920-4849-0d828ee51b66",
					"name": "me",
					"description": "",
					"order": [
						"ddb628a7-2ab2-e2c6-4d8d-228f83844e5f",
						"58c69a78-8c04-067a-2731-cab30e1ef294",
						"f3343142-2304-7acd-e413-e22044afad78",
						"a4b1623b-6a6b-0ff0-f305-87cae717b7d8",
						"1e6ec529-cc57-9065-f28e-05936f67d2d0"
					],
					"createdAt": "2015-10-14T09:09:02.000Z",
					"updatedAt": "2015-10-14T09:09:07.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685549,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db",
					"name": "products",
					"description": "",
					"order": [
						"d5ad7260-9b62-bda9-ea80-a06aa32a7416",
						"f339af3e-acf3-8039-76ed-2d188bd6563a",
						"667ba695-513a-3bf2-4813-5a45dfd86183",
						"5b4656d9-a660-12ab-8b4a-5145c44ad882",
						"d293a708-4d45-bf50-494b-b933c4d98209",
						"b7775e18-1293-fbcb-944f-af39aa358df8"
					],
					"createdAt": "2015-09-23T16:02:32.000Z",
					"updatedAt": "2015-10-14T09:09:07.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685551,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "e0d44125-766d-5755-dc74-337a4803e07c",
					"name": "services",
					"description": "",
					"order": [
						"4276578a-9c0c-09ae-f641-16177b35ec65",
						"5c22ade9-5738-07b7-fdcd-3daa121c4a70",
						"ac6c44bd-1400-cc2d-e174-717b212ce7c2",
						"7cafc7ea-d0da-c067-3870-7322bc4274aa",
						"223e60ee-4bde-12cf-1bfc-a2d339fc8203",
						"9e52af98-884a-2104-1652-d3d9c8416694"
					],
					"createdAt": "2015-10-14T09:09:03.000Z",
					"updatedAt": "2015-10-14T09:09:07.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"collectionId": "f63c5220-4d7e-d6bc-c219-77d1d734d14e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685552,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "666df5be-2ff3-7a50-5cdd-6949d97a14d2",
					"name": "settings",
					"description": "",
					"order": [
						"800c7aa1-6c8a-7c7b-7cb1-73a140321767"
					],
					"createdAt": "2015-10-14T09:09:03.000Z",
					"updatedAt": "2015-10-14T09:09:05.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685554,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "4af15e53-cdba-10b3-3df1-ae39ca683153",
					"name": "surveys",
					"description": "",
					"order": [
						"66162e55-1e22-1109-eeca-6369d4dde835",
						"395033bc-bca3-9df6-35a8-66abc5f5d518"
					],
					"createdAt": "2015-10-14T09:09:03.000Z",
					"updatedAt": "2015-10-14T09:09:07.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685557,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "c08879f3-c9f5-e1ed-7d98-56bab26afeab",
					"name": "tokens",
					"description": "",
					"order": [
						"4268a9d3-dfcc-49cf-7eec-1732bf464a83",
						"a913e15b-331e-47b1-4a8a-6cbb97e78fd0"
					],
					"createdAt": "2015-10-14T09:09:03.000Z",
					"updatedAt": "2015-10-14T09:09:05.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"owner": "161799",
					"lastUpdatedBy": "161799",
					"lastRevision": 66685558,
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"id": "75527181-d0e3-5fad-010f-9d3c2cf14ad1",
					"name": "users",
					"description": "",
					"order": [
						"edd3c817-f6f8-a64a-4805-02e3164443bf",
						"e34acc44-2ca1-3385-df36-7ed418202ca8",
						"936f5a93-d141-6402-8410-316ab4d7053a"
					],
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-10-14T09:09:07.000Z",
					"write": true,
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				},
				{
					"id": "d8501dab-2e9a-da30-da8b-e373e1b0a98f",
					"name": "villages",
					"description": "",
					"write": true,
					"order": [
						"88e50d92-512d-bb71-3350-e423e4e9d156",
						"1abfe89c-9d5c-4c95-e2d2-e774199c784e"
					],
					"collection": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"collection_name": "Village",
					"collection_owner": "161799",
					"collection_id": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e"
				}
			],
			"timestamp": 0,
			"synced": true,
			"remote_id": "0",
			"owner": "161799",
			"sharedWithTeam": false,
			"subscribed": false,
			"remoteLink": "",
			"remoteLinkUpdatedAt": null,
			"public": false,
			"createdAt": 1471255836118,
			"updatedAt": 1471355608812,
			"write": true,
			"published": false,
			"favorite": false,
			"permissions": {},
			"syncedPermissions": {},
			"requests": [
				{
					"id": "1abfe89c-9d5c-4c95-e2d2-e774199c784e",
					"headers": "",
					"url": "{{domain}}/api/v1/villages/partner-request",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "company_name",
							"value": "company name",
							"type": "text",
							"enabled": true
						},
						{
							"key": "full_name",
							"value": "test full_name",
							"type": "text",
							"enabled": true
						},
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 201;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1454344021665,
					"name": "/api/v1/villages/partner-request",
					"description": "Add new village partner request",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "d8501dab-2e9a-da30-da8b-e373e1b0a98f"
				},
				{
					"id": "1e6ec529-cc57-9065-f28e-05936f67d2d0",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/phone",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "{{tokens,session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{tokens,code}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "// tests[\"Body matches string\"] = responseBody.has(\"data\");\n// tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\n// tests[\"Body contains id\"] = responseBody.has(\"id\");\n// tests[\"Body contains session\"] = responseBody.has(\"session\");\n\n// var data = JSON.parse(responseBody);\n// if (data.data) {\n//     if ('true' === postman.getEnvironmentVariable('debug')) {\n//         var hasCode = data.code !== 'undefined';\n//         tests[\"Body contains code\"] = hasCode;\n//         if (hasCode) {\n//             postman.setEnvironmentVariable(\"token.code\", data.data.code);\n//         }\n//     }\n\n//     if (data.data.session) {\n//         postman.setEnvironmentVariable(\"token.session\", data.data.session);    \n//     }    \n// }",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443134265474,
					"name": "/api/v1/me/phone",
					"description": "Change phone number",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "0f31ed68-0b02-7920-4849-0d828ee51b66",
					"write": true,
					"synced": true
				},
				{
					"id": "223e60ee-4bde-12cf-1bfc-a2d339fc8203",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/orders/{{service.order.id.for_payment_check}}/payment",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1456743131738,
					"name": "/api/v1/services/orders/{id}/payment",
					"description": "Check card payment for a single service order",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c"
				},
				{
					"id": "2460d8af-d2a5-1917-e9fb-5bf3392ae4e9",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/auth/refresh",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar response = JSON.parse(responseBody);\nif (response.data && response.data.token) {\n    postman.setEnvironmentVariable(\"token\", response.data.token);   \n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445611254858,
					"name": "/api/v1/auth/refresh",
					"description": "Refresh token by old token",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "9e196810-364d-6d78-af81-cb31ea2a333c"
				},
				{
					"id": "25a5fcb4-ca5a-2dc0-5e3c-e31f1bc5eae6",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/buildings/{{building.code}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"building.code\", 'test');",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains address\"] = responseBody.has(\"address\");\n\npostman.setEnvironmentVariable(\"building.id\", response.data.id);",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1446760735949,
					"name": "/api/v1/buildings/{code}",
					"description": "Get a building by code",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "5f7e66dd-4431-c43c-ec23-ca506bf474b3"
				},
				{
					"id": "395033bc-bca3-9df6-35a8-66abc5f5d518",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/surveys/{{survey.id}}",
					"preRequestScript": "randomSurveyChoice = Math.floor(Math.random() * 3);\npostman.setEnvironmentVariable(\"survey.choice\", randomSurveyChoice);",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "choice",
							"value": "{{survey.choice}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains choice\"] = responseBody.has(\"choice\");\ntests[\"Returned choice is right\"] = randomSurveyChoice * 1 === data.data.choice * 1;\n\nif (data.data.choice) {\n    postman.setEnvironmentVariable(\"survey.my_vote.choice\", data.data.choice);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1443134184177,
					"name": "/api/v1/surveys/{id}",
					"description": "Survey vote",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "4af15e53-cdba-10b3-3df1-ae39ca683153",
					"write": true,
					"synced": true
				},
				{
					"id": "4268a9d3-dfcc-49cf-7eec-1732bf464a83",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/tokens",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "type",
							"value": "registration|reset_password|change_phone",
							"type": "text",
							"enabled": true
						},
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_phone",
							"value": null,
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains session\"] = responseBody.has(\"session\");\npostman.setEnvironmentVariable(\"token.session\", data.data.session);\n\nif ('true' === postman.getEnvironmentVariable('debug')) {\n    tests[\"Body contains code\"] = responseBody.has(\"code\");\n    postman.setEnvironmentVariable(\"token.code\", data.data.code);\n}\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1445273387376,
					"name": "/api/v1/tokens",
					"description": "Add new token",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-10-19T16:49:47.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 68838354,
					"folder": "c08879f3-c9f5-e1ed-7d98-56bab26afeab"
				},
				{
					"id": "4276578a-9c0c-09ae-f641-16177b35ec65",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services?category_id={{service.category.id}}&page={{page}}&search=",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id }}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"service.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1458316335771,
					"name": "/api/v1/services",
					"description": "Get all services",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c"
				},
				{
					"id": "58c69a78-8c04-067a-2731-cab30e1ef294",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/name",
					"preRequestScript": "first_name = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\nlast_name = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10);\npostman.setEnvironmentVariable(\"me.first_name\", first_name);\npostman.setEnvironmentVariable(\"me.last_name\", last_name);",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\nif (response.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\n    tests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\n    tests[\"Body contains phone\"] = responseBody.has(\"phone\");\n    tests[\"Body contains activated\"] = responseBody.has(\"activated\");    \n    tests[\"first_name changed\"] = first_name === response.data.first_name;\n    tests[\"last_name changed\"] = last_name === response.data.last_name;\n}\nelse {\n    tests[\"has data\"] = false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1446761169795,
					"name": "/api/v1/me/name",
					"description": "Change first name and last name",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "0f31ed68-0b02-7920-4849-0d828ee51b66"
				},
				{
					"id": "5b4656d9-a660-12ab-8b4a-5145c44ad882",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/orders?page={{page}}&search=&limit=10",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Count > 0\"] = data.data.length;\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains quantity\"] = responseBody.has(\"quantity\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");    \n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    $.each(data.data, function(index, order) {\n        if (order.status === 'rejected') {\n            tests[\"decline_reason not null, index = \" + index] = order.decline_reason !== null;\n        }\n        else {\n            tests[\"decline_reason is null, index = \" + index] = order.decline_reason === null;\n        }\n        tests[\"Body contains product, index = \" + index] = order.product && order.product.data;      \n        \n        // order id для проверки оплаты через карточку\n        if (order.payment_type === 'card' && order.payment_status === 'not_paid') {\n            postman.setEnvironmentVariable(\"product.order.id.for_payment_check\", order.id);   \n        }        \n    });\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1459779537927,
					"name": "/api/v1/products/orders",
					"description": "Get all my product's orders",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db"
				},
				{
					"id": "5c22ade9-5738-07b7-fdcd-3daa121c4a70",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/categories",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "session",
							"value": "2DX63DDKxu",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "2995870",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    \n    postman.setEnvironmentVariable(\"service.category.id\", data.data[0].id);\n}\nelse {\n    postman.setEnvironmentVariable(\"service.category.id\", 1);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128839836,
					"name": "/api/v1/services/categories",
					"description": "Get all categories of services",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:33.000Z",
					"updatedAt": "2015-09-24T21:07:19.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60493307,
					"history": null,
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c",
					"write": true
				},
				{
					"id": "66162e55-1e22-1109-eeca-6369d4dde835",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/surveys/current",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "choice",
							"value": "{{survey.choice}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains title\"] = responseBody.has(\"title\");\ntests[\"Body contains options\"] = responseBody.has(\"options\");\ntests[\"Body contains options count > 0\"] = response.data.options.length > 0;\n\nif (response.data) {\n    postman.setEnvironmentVariable(\"survey.id\", response.data.id);    \n}\n\nif (response.data.my_vote) {\n    postman.setEnvironmentVariable(\"survey.my_vote.choice\", response.data.my_vote.data.choice);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445616134455,
					"name": "/api/v1/surveys/current",
					"description": "Get current survey",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "4af15e53-cdba-10b3-3df1-ae39ca683153"
				},
				{
					"id": "667ba695-513a-3bf2-4813-5a45dfd86183",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/{{product.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");\n    tests[\"Body contains image\"] = responseBody.has(\"image\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"product.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445430785078,
					"name": "/api/v1/products/{id}",
					"description": "Get one product by id",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db"
				},
				{
					"id": "7cafc7ea-d0da-c067-3870-7322bc4274aa",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/orders?page={{page}}&search=&limit=10",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Count == 15 \"] = data.data.length;\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    $.each(data.data, function(index, order) {\n        if (order.status === 'rejected') {\n            tests[\"decline_reason not null, index = \" + index] = order.decline_reason !== null;\n        }\n        else {\n            tests[\"decline_reason is null, index = \" + index] = order.decline_reason === null;\n        }\n        tests[\"Body contains service, index = \" + index] = order.service && order.service.data;        \n        \n        // order id для проверки оплаты через карточку\n        if (order.payment_type === 'card' && order.payment_status === 'not_paid') {\n            postman.setEnvironmentVariable(\"service.order.id.for_payment_check\", order.id);   \n        }\n    });\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1459779505264,
					"name": "/api/v1/services/orders",
					"description": "Get all my service orders",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c"
				},
				{
					"id": "800c7aa1-6c8a-7c7b-7cb1-73a140321767",
					"owner": "161799",
					"headers": "",
					"url": "{{domain}}/api/v1/settings",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "type",
							"value": "change_phone",
							"type": "text",
							"enabled": true
						},
						{
							"key": "session",
							"value": "{{token.session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{token.code}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Body contains name\"] = responseBody.has(\"name\");\ntests[\"Body contains value\"] = responseBody.has(\"value\");",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1445273301998,
					"name": "/api/v1/settings",
					"description": "Get all settings",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-10-14T09:09:05.000Z",
					"updatedAt": "2015-10-19T16:48:22.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 66685588,
					"folder": "666df5be-2ff3-7a50-5cdd-6949d97a14d2"
				},
				{
					"id": "88e50d92-512d-bb71-3350-e423e4e9d156",
					"headers": "",
					"url": "{{domain}}/api/v1/villages/request",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "full_name",
							"value": "test full_name123123",
							"type": "text",
							"enabled": true
						},
						{
							"key": "position",
							"value": "chairman",
							"type": "text",
							"enabled": true
						},
						{
							"key": "address",
							"value": "test address",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 201;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1447260896825,
					"name": "/api/v1/villages/request",
					"description": "Add new village request",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "d8501dab-2e9a-da30-da8b-e373e1b0a98f"
				},
				{
					"id": "936f5a93-d141-6402-8410-316ab4d7053a",
					"headers": "",
					"url": "{{domain}}/api/v1/users/reset",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "{{token.session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{token.code}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "first_name",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"token\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", data.data.token);",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445272334775,
					"name": "/api/v1/users/reset",
					"description": "Reset user password",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "75527181-d0e3-5fad-010f-9d3c2cf14ad1"
				},
				{
					"id": "945b236d-d59f-b8e0-468a-cdf3e51a7336",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/articles?page={{page}}",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\nif (response.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains short\"] = responseBody.has(\"short\");\n    tests[\"Body contains text\"] = responseBody.has(\"text\");    \n    postman.setEnvironmentVariable(\"article.id\", response.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1446760904566,
					"name": "/api/v1/articles",
					"description": "<p>Get articles list</p>",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "b9d65d56-38c6-46af-a8b2-74e1acb8a1d4"
				},
				{
					"id": "9e52af98-884a-2104-1652-d3d9c8416694",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/orders",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains service\"] = responseBody.has(\"service\") && data.data.service && data.data.service.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1449070910869,
					"name": "/api/v1/services/orders",
					"description": "Add service order",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c"
				},
				{
					"id": "a43256f0-0441-be2e-59dc-715ccfbf9452",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/articles/{{article.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "product_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains short\"] = responseBody.has(\"short\");\n    tests[\"Body contains text\"] = responseBody.has(\"text\");    \n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443121107594,
					"name": "/api/v1/articles/{id}",
					"description": "<p>Get article by id</p>",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:31.000Z",
					"updatedAt": "2015-09-24T18:58:27.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60460532,
					"history": null,
					"folder": "b9d65d56-38c6-46af-a8b2-74e1acb8a1d4",
					"write": true
				},
				{
					"id": "a4b1623b-6a6b-0ff0-f305-87cae717b7d8",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/password",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						},
						{
							"key": "new_password_confirmation",
							"value": "qwerty",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\n\ntests[\"Body contains id\"] = responseBody.has(\"id\");\ntests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\ntests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\ntests[\"Body contains phone\"] = responseBody.has(\"phone\");\ntests[\"Body contains activated\"] = responseBody.has(\"activated\");\ntests[\"Body contains building\"] = responseBody.has(\"building\");\n\npostman.setEnvironmentVariable(\"me.password\", data.data.id);\n",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443129800410,
					"name": "/api/v1/me/password",
					"description": "Change password",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": "html",
					"createdAt": "2015-09-23T22:01:05.000Z",
					"updatedAt": "2015-09-24T21:23:20.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60499054,
					"history": null,
					"folder": "0f31ed68-0b02-7920-4849-0d828ee51b66",
					"write": true
				},
				{
					"id": "a913e15b-331e-47b1-4a8a-6cbb97e78fd0",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/tokens/check",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "type",
							"value": "registration|reset_password|change_phone",
							"type": "text",
							"enabled": true
						},
						{
							"key": "session",
							"value": "{{token.session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{token.code}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445273537298,
					"name": "/api/v1/tokens/check",
					"description": "Check token code",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "c08879f3-c9f5-e1ed-7d98-56bab26afeab"
				},
				{
					"id": "ac6c44bd-1400-cc2d-e174-717b212ce7c2",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/services/{{service.id}}",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_at",
							"value": "2015-10-11 12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"service.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445430775330,
					"name": "/api/v1/services/{id}",
					"description": "Get one service by id",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"owner": "161799",
					"folder": "e0d44125-766d-5755-dc74-337a4803e07c"
				},
				{
					"id": "b7775e18-1293-fbcb-944f-af39aa358df8",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/orders/{{product.order.id.for_payment_check}}/payment",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "service_id",
							"value": "{{service.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1456744836803,
					"name": "/api/v1/services/orders/{id}/payment",
					"description": "Check card payment for a single product order",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db"
				},
				{
					"id": "d293a708-4d45-bf50-494b-b933c4d98209",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/orders",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "product_id",
							"value": "{{product.id}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_date",
							"value": "2015-10-11",
							"type": "text",
							"enabled": true
						},
						{
							"key": "perform_time",
							"value": "12:30",
							"type": "text",
							"enabled": true
						},
						{
							"key": "quantity",
							"value": "2",
							"type": "text",
							"enabled": true
						},
						{
							"key": "comment",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "payment_type",
							"value": "cash|card",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains quantity\"] = responseBody.has(\"quantity\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");\n    tests[\"Body contains status\"] = responseBody.has(\"status\");\n    tests[\"Body contains decline_reason\"] = responseBody.has(\"decline_reason\");\n    if (data.data.status === 'rejected') {\n        tests[\"decline_reason not null\"] = data.data.decline_reason !== null;\n    }\n    else {\n        tests[\"decline_reason is null\"] = data.data.decline_reason === null;\n    }\n    tests[\"Body contains product\"] = responseBody.has(\"product\") && data.data.product && data.data.product.data;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1449070874265,
					"name": "/api/v1/products/orders",
					"description": "Add product order",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db"
				},
				{
					"id": "d5ad7260-9b62-bda9-ea80-a06aa32a7416",
					"owner": "161799",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products/categories",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "session",
							"value": "2DX63DDKxu",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "2995870",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    \n    postman.setEnvironmentVariable(\"product.category.id\", data.data[0].id);\n}\nelse {\n    postman.setEnvironmentVariable(\"product.category.id\", 1);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1443128820612,
					"name": "/api/v1/products/categories",
					"description": "Get all my product's orders",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:32.000Z",
					"updatedAt": "2015-09-24T21:07:00.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 60494943,
					"history": null,
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db",
					"write": true
				},
				{
					"id": "da0d471b-7793-1fd8-4cce-b709a907de91",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/articles/categories",
					"preRequestScript": "postman.setEnvironmentVariable(\"page\", 1);",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\nif (response.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1471355797868,
					"name": "/api/v1/articles/categories",
					"description": "<p>Get all articles categories</p>",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": []
				},
				{
					"id": "dd8e64f3-7cb1-e930-9992-878b27914e6b",
					"headers": "",
					"url": "{{domain}}/api/v1/auth/token",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body contains data\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar response = JSON.parse(responseBody);\nif (response.data && response.data.token) {\n    postman.setEnvironmentVariable(\"token\", response.data.token);   \n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1445611586619,
					"name": "/api/v1/auth/token",
					"description": "Get token by user credentials (phone and password)",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "9e196810-364d-6d78-af81-cb31ea2a333c"
				},
				{
					"id": "ddb628a7-2ab2-e2c6-4d8d-228f83844e5f",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "first_name",
							"value": "{{me.first_name}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "{{me.last_name}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\nresponse.data = 1;\nif (response.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\n    tests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\n    tests[\"Body contains phone\"] = responseBody.has(\"phone\");\n    tests[\"Body contains activated\"] = responseBody.has(\"activated\");\n    tests[\"Body contains building\"] = responseBody.has(\"building\");\n\n    postman.setEnvironmentVariable(\"me.id\", response.data.id);\n    postman.setEnvironmentVariable(\"me.phone\", response.data.id);\n}\nelse {\n    tests[\"no data\"] = false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1446761288346,
					"name": "/api/v1/me",
					"description": "Get me info",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "0f31ed68-0b02-7920-4849-0d828ee51b66"
				},
				{
					"id": "e34acc44-2ca1-3385-df36-7ed418202ca8",
					"owner": "161799",
					"headers": "",
					"url": "{{domain}}/api/v1/users/confirm",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "session",
							"value": "{{token.session}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "code",
							"value": "{{token.code}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password_confirmation",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "first_name",
							"value": "test",
							"type": "text",
							"enabled": true
						},
						{
							"key": "last_name",
							"value": "test",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"token\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\ntests[\"Body contains token\"] = responseBody.has(\"token\");\n\nvar data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"token\", data.data.token);",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1445273290455,
					"name": "/api/v1/users/confirm",
					"description": "User regisration confirm",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-10-19T16:48:10.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 68833110,
					"folder": "75527181-d0e3-5fad-010f-9d3c2cf14ad1"
				},
				{
					"id": "edd3c817-f6f8-a64a-4805-02e3164443bf",
					"owner": "161799",
					"headers": "",
					"url": "{{domain}}/api/v1/users",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "phone",
							"value": null,
							"type": "text",
							"enabled": true
						},
						{
							"key": "building_id",
							"value": "{{building.id}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar data = JSON.parse(responseBody);\ntests[\"Body contains session\"] = responseBody.has(\"session\");\npostman.setEnvironmentVariable(\"token.session\", data.data.session);\n\nif ('true' === postman.getEnvironmentVariable('debug')) {\n    tests[\"Body contains code\"] = responseBody.has(\"code\");\n    postman.setEnvironmentVariable(\"token.code\", data.data.code);\n}",
					"currentHelper": "normal",
					"helperAttributes": "{}",
					"time": 1445273286271,
					"name": "/api/v1/users",
					"description": "New user regisration",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"synced": true,
					"rawModeData": null,
					"descriptionFormat": null,
					"createdAt": "2015-09-23T16:02:35.000Z",
					"updatedAt": "2015-10-19T16:48:06.000Z",
					"lastUpdatedBy": {
						"id": "161799",
						"username": "NEOKILLER King"
					},
					"lastRevision": 68832664,
					"folder": "75527181-d0e3-5fad-010f-9d3c2cf14ad1"
				},
				{
					"id": "f3343142-2304-7acd-e413-e22044afad78",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/me/email",
					"preRequestScript": "email = 'test@test.test';\npostman.setEnvironmentVariable(\"me.email\", email);",
					"pathVariables": {},
					"method": "POST",
					"data": [
						{
							"key": "email",
							"value": "{{me.email}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json'\n\nvar response = JSON.parse(responseBody);\nif (response.data) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains email\"] = responseBody.has(\"email\");\n    tests[\"Body contains first_name\"] = responseBody.has(\"first_name\");\n    tests[\"Body contains last_name\"] = responseBody.has(\"last_name\");\n    tests[\"Body contains phone\"] = responseBody.has(\"phone\");\n    tests[\"Body contains activated\"] = responseBody.has(\"activated\");    \n    tests[\"first_name changed\"] = first_name === response.data.first_name;\n    tests[\"last_name changed\"] = last_name === response.data.last_name;\n    tests[\"last_name changed\"] = email === response.data.email;\n}\nelse {\n    tests[\"has data\"] = false;\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1446761264045,
					"name": "/api/v1/me/email",
					"description": "Change email",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "0f31ed68-0b02-7920-4849-0d828ee51b66"
				},
				{
					"id": "f339af3e-acf3-8039-76ed-2d188bd6563a",
					"headers": "Authorization: Bearer  {{token}}\n",
					"url": "{{domain}}/api/v1/products?category_id={{product.category.id}}&page={{page}}&search=",
					"preRequestScript": "",
					"pathVariables": {},
					"method": "GET",
					"data": [
						{
							"key": "phone",
							"value": "{{phone}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "full_name",
							"value": "test full_name123123",
							"type": "text",
							"enabled": true
						},
						{
							"key": "position",
							"value": "chairman",
							"type": "text",
							"enabled": true
						},
						{
							"key": "address",
							"value": "test address",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"version": 2,
					"tests": "tests[\"Body matches string\"] = responseBody.has(\"data\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Content-Type is application/json\"] = postman.getResponseHeader(\"Content-type\") === 'application/json';\n\nvar data = JSON.parse(responseBody);\nif (data.data.length > 0) {\n    tests[\"Body contains id\"] = responseBody.has(\"id\");\n    tests[\"Body contains title\"] = responseBody.has(\"title\");\n    tests[\"Body contains price\"] = responseBody.has(\"price\");\n    tests[\"Body contains unit_title\"] = responseBody.has(\"unit_title\");\n    tests[\"Body contains image\"] = responseBody.has(\"image\");\n    tests[\"Body contains category\"] = responseBody.has(\"category\");\n\n    postman.setEnvironmentVariable(\"product.id\", data.data[0].id);\n}",
					"currentHelper": "normal",
					"helperAttributes": {},
					"time": 1457619102464,
					"name": "/api/v1/products",
					"description": "Get all my product's orders",
					"collectionId": "f0cbe64a-6c06-4b0f-7fa9-b1209afde57e",
					"responses": [],
					"owner": "161799",
					"folder": "2fbfddf6-5fc2-4b65-cfe9-32f280db00db"
				}
			]
		}
	],
	"environments": [
		{
			"id": "a004eb55-888b-ee78-6d20-e55b8d1f5c6b",
			"name": "production",
			"values": [
				{
					"key": "debug",
					"type": "text",
					"value": "true",
					"enabled": true
				},
				{
					"key": "domain",
					"type": "text",
					"value": "http://1centr.com",
					"enabled": true
				},
				{
					"key": "token",
					"type": "text",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjE4ODEsImlzcyI6Imh0dHA6XC9cLzFjZW50ci5jb21cL2FwaVwvdjFcL2F1dGhcL3Rva2VuIiwiaWF0IjoxNDcxMjU2NDk2LCJleHAiOjE0NzM4NDg0OTYsIm5iZiI6MTQ3MTI1NjQ5NiwianRpIjoiNWQ1MTFlOTVlN2U4MGQ5ZjQxMTc0OTY0NTE1NTU3NDYifQ.kZF9Dv1NTQMYQJPrKpN8Fjo38bKBkamn9ADVs9U7qGE",
					"enabled": true
				},
				{
					"key": "phone",
					"type": "text",
					"value": "+7(961)6073140",
					"enabled": true
				},
				{
					"key": "password",
					"type": "text",
					"value": "qwerty",
					"enabled": true
				},
				{
					"key": "token.session",
					"type": "text",
					"value": "y3s6qzc112",
					"enabled": true
				},
				{
					"key": "token.code",
					"type": "text",
					"value": "2937477",
					"enabled": true
				},
				{
					"key": "service.category.id",
					"type": "text",
					"value": "107",
					"enabled": true
				},
				{
					"key": "building.code",
					"type": "text",
					"value": "test",
					"enabled": true
				},
				{
					"key": "building.id",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "article.id",
					"type": "text",
					"value": "554",
					"enabled": true
				},
				{
					"key": "product.category.id",
					"type": "text",
					"value": "162",
					"enabled": true
				},
				{
					"key": "page",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "service.id",
					"type": "text",
					"value": "312",
					"enabled": true
				},
				{
					"key": "survey.id",
					"type": "text",
					"value": "507",
					"enabled": true
				},
				{
					"key": "survey.my_vote.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "survey.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "product.id",
					"type": "text",
					"value": "269",
					"enabled": true
				},
				{
					"key": "me.id",
					"type": "text",
					"value": "undefined",
					"enabled": true
				},
				{
					"key": "me.phone",
					"type": "text",
					"value": "undefined",
					"enabled": true
				},
				{
					"key": "service.order.id.for_payment_check",
					"type": "text",
					"value": "309",
					"enabled": true
				},
				{
					"key": "product.order.id.for_payment_check",
					"type": "text",
					"value": "114",
					"enabled": true
				}
			],
			"team": null,
			"timestamp": 1471355391213
		},
		{
			"id": "fdfc1d48-8ad0-8d6e-ff74-a2c0b4c74448",
			"name": "staging",
			"values": [
				{
					"key": "debug",
					"type": "text",
					"value": "true",
					"enabled": true
				},
				{
					"key": "domain",
					"type": "text",
					"value": "http://village.fruitware.ru",
					"enabled": true
				},
				{
					"key": "token",
					"type": "text",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODc3IiwiaXNzIjoiaHR0cDpcL1wvdmlsbGFnZS5mcnVpdHdhcmUucnVcL2FwaVwvdjFcL2F1dGhcL3Rva2VuIiwiaWF0IjoxNDcxMjU2MTk4LCJleHAiOjE0NzM4NDgxOTgsIm5iZiI6MTQ3MTI1NjE5OCwianRpIjoiOTMyMTE0ZmMyZmE2MzU1Y2Q3ZGU4OGQ2MjI1YjcxOTIifQ.piSi1lZt3v6QJHLsMJTy85dqXX7GLkDY0C7GJrkQZnY",
					"enabled": true
				},
				{
					"key": "phone",
					"type": "text",
					"value": "+7(111)1111115",
					"enabled": true
				},
				{
					"key": "password",
					"type": "text",
					"value": "yj3wev32R6eQJWV",
					"enabled": true
				},
				{
					"key": "token.session",
					"type": "text",
					"value": "y3s6qzc112",
					"enabled": true
				},
				{
					"key": "token.code",
					"type": "text",
					"value": "2937477",
					"enabled": true
				},
				{
					"key": "service.category.id",
					"type": "text",
					"value": "107",
					"enabled": true
				},
				{
					"key": "building.code",
					"type": "text",
					"value": "test",
					"enabled": true
				},
				{
					"key": "building.id",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "article.id",
					"type": "text",
					"value": "566",
					"enabled": true
				},
				{
					"key": "product.category.id",
					"type": "text",
					"value": "154",
					"enabled": true
				},
				{
					"key": "page",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "service.id",
					"type": "text",
					"value": "306",
					"enabled": true
				},
				{
					"key": "survey.id",
					"type": "text",
					"value": "507",
					"enabled": true
				},
				{
					"key": "survey.my_vote.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "survey.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "product.id",
					"type": "text",
					"value": "260",
					"enabled": true
				},
				{
					"key": "me.id",
					"type": "text",
					"value": "undefined",
					"enabled": true
				},
				{
					"key": "me.phone",
					"type": "text",
					"value": "undefined",
					"enabled": true
				}
			],
			"team": null,
			"timestamp": 1471355391447
		},
		{
			"id": "737b4868-ac75-2c31-9280-ff28bb7d03e8",
			"name": "dev",
			"values": [
				{
					"key": "debug",
					"type": "text",
					"value": "true",
					"enabled": true
				},
				{
					"key": "domain",
					"type": "text",
					"value": "http://village.dev",
					"enabled": true
				},
				{
					"key": "token",
					"type": "text",
					"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjEyNjMsImlzcyI6Imh0dHA6XC9cL3ZpbGxhZ2UuZGV2XC9hcGlcL3YxXC9hdXRoXC90b2tlbiIsImlhdCI6MTQ3MTI1NjUyNywiZXhwIjoxNDczODQ4NTI3LCJuYmYiOjE0NzEyNTY1MjcsImp0aSI6IjY5Y2E5ZTc0MGJhZWVlNWViYWI1MDA0ODlmNTEyY2UzIn0._mSOyM2teiqp2RNyHUtfH8o5zOpaLmH9P1BynUnLRGc",
					"enabled": true
				},
				{
					"key": "phone",
					"type": "text",
					"value": "+7(111)1111112",
					"enabled": true
				},
				{
					"key": "password",
					"type": "text",
					"value": "yj3wev32R6eQJWV",
					"enabled": true
				},
				{
					"key": "token.code",
					"type": "text",
					"value": "49844",
					"enabled": true
				},
				{
					"key": "token.session",
					"type": "text",
					"value": "YBrj6CsSpQ",
					"enabled": true
				},
				{
					"key": "article.id",
					"type": "text",
					"value": "554",
					"enabled": true
				},
				{
					"key": "me.first_name",
					"type": "text",
					"value": "wzkqgjbyou",
					"enabled": true
				},
				{
					"key": "me.last_name",
					"type": "text",
					"value": "hsxdxcflwj",
					"enabled": true
				},
				{
					"key": "product.id",
					"type": "text",
					"value": "267",
					"enabled": true
				},
				{
					"key": "service.id",
					"type": "text",
					"value": "306",
					"enabled": true
				},
				{
					"key": "page",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "product.category.id",
					"type": "text",
					"value": "156",
					"enabled": true
				},
				{
					"key": "service.category.id",
					"type": "text",
					"value": "107",
					"enabled": true
				},
				{
					"key": "building.code",
					"type": "text",
					"value": "test",
					"enabled": true
				},
				{
					"key": "building.id",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "me.password",
					"type": "text",
					"value": "1",
					"enabled": true
				},
				{
					"key": "survey.id",
					"type": "text",
					"value": "447",
					"enabled": true
				},
				{
					"key": "survey.my_vote.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "survey.choice",
					"type": "text",
					"value": "0",
					"enabled": true
				},
				{
					"key": "me.email",
					"type": "text",
					"value": "test@test.test",
					"enabled": true
				},
				{
					"key": "me.id",
					"type": "text",
					"value": "undefined",
					"enabled": true
				},
				{
					"key": "me.phone",
					"type": "text",
					"value": "undefined",
					"enabled": true
				},
				{
					"key": "service.order.id",
					"type": "text",
					"value": "416",
					"enabled": true
				},
				{
					"key": "service.order.id.for_payment_check",
					"type": "text",
					"value": "4",
					"enabled": true
				},
				{
					"key": "product.order.id.for_payment_check",
					"type": "text",
					"value": "438",
					"enabled": true
				}
			],
			"team": null,
			"timestamp": 1471355623649
		}
	],
	"headerPresets": [
		{
			"id": "d2506735-10a2-8e01-4f01-5f7fd84e5fc9",
			"name": "Authorization",
			"headers": [
				{
					"key": "Authorization",
					"value": "Bearer  {{token}}",
					"type": "text",
					"name": "Authorization",
					"enabled": true
				}
			],
			"timestamp": 1443027474004
		}
	],
	"globals": [
		{
			"key": "{id}",
			"type": "text",
			"value": "1",
			"enabled": true
		},
		{
			"key": "{{id}}",
			"type": "text",
			"value": "1",
			"enabled": true
		},
		{
			"key": "id",
			"type": "text",
			"value": "1",
			"enabled": true
		}
	]
}